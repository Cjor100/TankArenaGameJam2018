<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_player_debug</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_speed = 5;
player_direction = 1;

forward = false;
left = false;
down = false;
right = false;

timer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Forward player control
if(keyboard_check_pressed(ord('W'))){ forward = true; }
if(keyboard_check_released(ord('W'))){forward = false;}
if(forward){y-= player_speed; player_direction = 90;}
//Down player control
if(keyboard_check_pressed(ord('S'))){ down = true; }
if(keyboard_check_released(ord('S'))){ down = false;}
if(down){y+=player_speed;player_direction = 270;}
//Left player control
if(keyboard_check_pressed(ord('A'))){ left = true; }
if(keyboard_check_released(ord('A'))){ left = false;}
if(left){ x-=player_speed;player_direction = 180;}
//Right player control

if(keyboard_check_pressed(ord('D'))){ right = true; }
if(keyboard_check_released(ord('D'))){ right = false;}
if(right){ x+=player_speed;player_direction = 0;}

if(right &amp;&amp; forward){ player_direction=45;} //Up-Right angle control
if(forward &amp;&amp; left){ player_direction=135;} //Up-Left angle control
if(left &amp;&amp; down){player_direction=225;} //Down-Left angle control
if(down &amp;&amp; right){ player_direction=315;} //Down-Right angle control

if(timer &lt;= 0){ //The timer prevents the player from being able to spam shoot
start_time = false;
if(keyboard_check_pressed(vk_space)){
bullet = instance_create(x,y,obj_bullet);
bullet.direction = player_direction;
bullet.speed = 10;
timer = 20;
start_time=true;
}
}
if(start_time){
timer--;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
